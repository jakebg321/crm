

Render site:https://crm-pt7w.onrender.com/
# üßë‚Äçüíª Copilot: wire up Render Postgres & NextAuth

# 1) Create or update `.env` in project root:
# ------------------------------------------------------
DATABASE_URL="postgresql://yardbase_crm_db_user:UE4ZHd7iZtuBgylaR1JrnZFDPvdPNTzI@dpg-d0hscibuibrs739nnl8g-a.ohio-postgres.render.com:5432/yardbase_crm_db"

NEXTAUTH_URL="https://<YOUR_RENDER_SERVICE_NAME>.onrender.com"
NEXTAUTH_SECRET="2b1e4c7e8f9a0d1c2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d"

# 2) Update `prisma/schema.prisma` datasource block:
# ------------------------------------------------------
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

# 3) Ensure `lib/prisma.ts` picks up the new DATABASE_URL
# ------------------------------------------------------
import { PrismaClient } from '@prisma/client'

declare global {
  // prevent multiple clients in dev
  // @ts-ignore
  var prisma: PrismaClient
}

export const prisma =
  global.prisma ||
  new PrismaClient({
    datasources: { db: { url: process.env.DATABASE_URL } },
  })

if (process.env.NODE_ENV !== 'production') global.prisma = prisma

# 4) In your Render Dashboard > Next.js Service > Environment Variables:
# ------------------------------------------------------
#   - Add DATABASE_URL   (value from step 1)
#   - Add NEXTAUTH_URL   (value from step 1)
#   - Add NEXTAUTH_SECRET(value from step 1)

# 5) In Render Dashboard > Next.js Service > Build & Deploy > Build Command:
# ------------------------------------------------------
npx prisma migrate deploy && npm run build

# 6) Commit these changes, push, and then trigger a manual deploy.  
#    After deployment, test your app at https://<YOUR_RENDER_SERVICE_NAME>.onrender.com
